version: '3.8'
services:
  admin_backend:
    build:
      context: .
      dockerfile: admin/Dockerfile
    command: 'python3 manage.py runserver 0.0.0.0:8000'
    ports:
      - 8000:8000
    volumes:
      - ./admin:/app
    depends_on:
      - db

  admin_queue:
    build:
      context: .
      dockerfile: admin/Dockerfile
    command: 'python3 -u consumer.py'
    depends_on:
      - db

  db:
    image: mysql:5.7.22
    restart: always
    environment:
      MYSQL_DATABASE: admin
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./admin/.dbdata:/var/lib/mysql
    ports:
      - 33066:3306


  main_backend:
    build:
      context: .
      dockerfile: main/Dockerfile
    command: 'python3 main.py'
    ports:
      - 8001:5000
    volumes:
      - ./main:/app
    depends_on:
      - main_db
    deploy:
      replicas: 3
      endpoint_mode: dnsrr

  main_queue:
    build:
      context: .
      dockerfile: main/Dockerfile
    command: 'python3 -u consumer.py'
    depends_on:
      - main_db

  main_db:
    image: mysql:5.7.22
    restart: always
    environment:
      MYSQL_DATABASE: main
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./main/.dbdata:/var/lib/mysql
    ports:
      - 33067:3306

  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: frontend/Dockerfile
    volumes:
      - ./frontend:/app
    ports:
      - 3000:3000
    stdin_open: true  
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm start

